<Project Sdk="Microsoft.NET.Sdk.Web">

	<PropertyGroup>
		<TargetFramework>net6.0</TargetFramework>
		<Nullable>enable</Nullable>
		<ImplicitUsings>enable</ImplicitUsings>
		<SpaRoot>frontend\</SpaRoot>
		<DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="6.0.5" />
		<PackageReference Include="CertificateManager" Version="1.0.8" />
		<PackageReference Include="ColorHashSharp" Version="1.0.0" />
		<PackageReference Include="elFinder.NetCore" Version="1.3.6" />
		<PackageReference Include="FreeSpire.XLS" Version="12.2.0" />
		<PackageReference Include="itext7" Version="7.2.2" />
		<PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="6.0.8" />
		<PackageReference Include="Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore" Version="6.0.5" />
		<PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" Version="6.0.5" />
		<PackageReference Include="Microsoft.AspNetCore.Identity.UI" Version="6.0.5" />
		<PackageReference Include="Microsoft.EntityFrameworkCore" Version="6.0.6" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="6.0.5">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="Microsoft.EntityFrameworkCore.Relational" Version="6.0.6" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="6.0.5" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="6.0.5">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="6.0.11" />
	</ItemGroup>
	<ItemGroup>
		<!-- Don't publish the SPA source files, but do show them in the project files list -->
		<Content Remove="$(SpaRoot)**" />
		<None Remove="$(SpaRoot)**" />
		<None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
	</ItemGroup>
	<ItemGroup>
		<_WebToolingArtifacts Remove="Properties\PublishProfiles\web.pubxml" />
	</ItemGroup>
	<ItemGroup>
		<None Include="frontend\.vscode\extensions.json" />
		<None Include="frontend\package-lock.json" />
		<None Include="frontend\package.json" />
		<None Include="frontend\tsconfig.config.json" />
		<None Include="frontend\tsconfig.json" />
		<None Include="Properties\PublishProfiles\web.pubxml.user" />
		<None Include="wwwroot\assets\js\app.js" />
		<None Include="wwwroot\assets\js\bootstrap.bundle.min.js" />
		<None Include="wwwroot\assets\js\jquery-ui.min.js" />
		<None Include="wwwroot\assets\js\jquery.core.js" />
		<None Include="wwwroot\assets\js\jquery.min.js" />
		<None Include="wwwroot\assets\js\jquery.slimscroll.min.js" />
		<None Include="wwwroot\assets\js\metisMenu.min.js" />
		<None Include="wwwroot\assets\js\waves.min.js" />
		<None Include="wwwroot\images\icons-big.svg" />
		<None Include="wwwroot\images\icons-small.svg" />
		<None Include="wwwroot\images\loading.svg" />
		<None Include="wwwroot\images\process.svg" />
		<None Include="wwwroot\images\task.svg" />
		<None Include="wwwroot\images\user.webp" />
	</ItemGroup>
	<Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
		<!-- Ensure Node.js is installed -->
		<Exec Command="node --version" ContinueOnError="true">
			<Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
		</Exec>
		<Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
		<Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
	</Target>
	<Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
		<!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />
		<!-- Include the newly-built files in the publish output -->
		<ItemGroup>
			<DistFiles Include="$(SpaRoot)dist\**" />
			<ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
				<RelativePath>%(DistFiles.Identity)</RelativePath>
				<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
				<ExcludeFromSingleFile>true</ExcludeFromSingleFile>
			</ResolvedFileToPublish>
		</ItemGroup>
	</Target>
</Project>
